{"version":3,"sources":["webpack:///./src/app/charts/charts-routing.module.ts","webpack:///./src/app/charts/charts.module.ts","webpack:///./src/app/charts/components/bar-chart/bar-chart.component.html","webpack:///./src/app/charts/components/bar-chart/bar-chart.component.scss","webpack:///./src/app/charts/components/bar-chart/bar-chart.component.ts","webpack:///./src/app/charts/components/doughnut-chart/doughnut-chart.component.html","webpack:///./src/app/charts/components/doughnut-chart/doughnut-chart.component.scss","webpack:///./src/app/charts/components/doughnut-chart/doughnut-chart.component.ts","webpack:///./src/app/charts/components/line-chart/line-chart.component.html","webpack:///./src/app/charts/components/line-chart/line-chart.component.scss","webpack:///./src/app/charts/components/line-chart/line-chart.component.ts","webpack:///./src/app/charts/components/pie-chart/pie-chart.component.html","webpack:///./src/app/charts/components/pie-chart/pie-chart.component.scss","webpack:///./src/app/charts/components/pie-chart/pie-chart.component.ts","webpack:///./src/app/charts/containers/charts/charts.component.html","webpack:///./src/app/charts/containers/charts/charts.component.scss","webpack:///./src/app/charts/containers/charts/charts.component.ts","webpack:///./src/app/charts/services/charts.service.ts","webpack:///./src/app/charts/store/charts.actions.ts","webpack:///./src/app/charts/store/charts.effects.ts","webpack:///./src/app/charts/store/charts.reducer.ts","webpack:///./src/app/charts/store/charts.selectors.ts","webpack:///./src/app/charts/store/charts.state.ts"],"names":[],"mappings":"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","file":"charts-charts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChartsComponent } from './containers/charts/charts.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ChartsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChartsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChartsModule, CardsFreeModule, ButtonsModule, TableModule } from 'angular-bootstrap-md';\r\nimport { ChartsComponent } from './containers/charts/charts.component';\r\nimport { LineChartComponent } from './components/line-chart/line-chart.component';\r\nimport { ChartsRoutingModule } from './charts-routing.module';\r\n\r\nimport * as fromCharts from './store/charts.reducer';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ChartsEffects } from './store/charts.effects';\r\nimport { BarChartComponent } from './components/bar-chart/bar-chart.component';\r\nimport { DoughnutChartComponent } from './components/doughnut-chart/doughnut-chart.component';\r\nimport { PieChartComponent } from './components/pie-chart/pie-chart.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardsFreeModule,\r\n    ChartsModule,\r\n    ButtonsModule,\r\n    TableModule,\r\n    ChartsRoutingModule,\r\n    StoreModule.forFeature('charts', fromCharts.chartsReducer),\r\n    EffectsModule.forFeature([ChartsEffects])\r\n  ],\r\n  declarations: [ChartsComponent, LineChartComponent, BarChartComponent, DoughnutChartComponent, PieChartComponent],\r\n  exports: [ChartsComponent, LineChartComponent]\r\n})\r\nexport class ChartsDataModule { }\r\n","module.exports = \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\r\\n    [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2Jhci1jaGFydC9iYXItY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bar-chart',\r\n  templateUrl: './bar-chart.component.html',\r\n  styleUrls: ['./bar-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'bar';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255,99,132,1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)'\r\n      ],\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\" [options]=\\\"chartOptions\\\"\\r\\n    [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2RvdWdobnV0LWNoYXJ0L2RvdWdobnV0LWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doughnut-chart',\r\n  templateUrl: './doughnut-chart.component.html',\r\n  styleUrls: ['./doughnut-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DoughnutChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'doughnut';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\r\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" height=\\\"500px\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\r\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL2xpbmUtY2hhcnQvbGluZS1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-line-chart',\r\n  templateUrl: './line-chart.component.html',\r\n  styleUrls: ['./line-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LineChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'line';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: 'rgba(255, 152, 0, .5)',\r\n      borderColor: 'rgb(230,81,0)',\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true,\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"<div style=\\\"display: block\\\">\\r\\n  <canvas mdbChart [chartType]=\\\"chartType\\\" [datasets]=\\\"dataset\\\" [labels]=\\\"labels\\\" [colors]=\\\"chartColors\\\"\\r\\n    [options]=\\\"chartOptions\\\" [legend]=\\\"true\\\">\\r\\n  </canvas>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb21wb25lbnRzL3BpZS1jaGFydC9waWUtY2hhcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pie-chart',\r\n  templateUrl: './pie-chart.component.html',\r\n  styleUrls: ['./pie-chart.component.scss']\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n  @Input() dataset: any;\r\n  @Input() labels: any;\r\n\r\n  public chartType = 'pie';\r\n\r\n  public chartColors: Array<any> = [\r\n    {\r\n      backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'],\r\n      hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774'],\r\n      borderWidth: 2,\r\n    }\r\n  ];\r\n\r\n  public chartOptions: any = {\r\n    responsive: true\r\n  };\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n<div class=\\\"section-header\\\">\\r\\n  <h3 class=\\\"grey-text\\\">Financial Charts</h3>\\r\\n  <p class=\\\"grey-text pt-3\\\">Visualisation of data downloaded from an external API</p>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 300px\\\">\\r\\n  <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\r\\n    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!(isLoading$ | async)\\\" class=\\\"charts-container p-5\\\">\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-body>\\r\\n          <div class=\\\"pl-4\\\">\\r\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('USD')\\\">USD</button>\\r\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('PLN')\\\">PLN</button>\\r\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('GBP')\\\">GBP</button>\\r\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('JPY')\\\">JPY</button>\\r\\n            <button mdbBtn color=\\\"primary\\\" size=\\\"sm\\\" (click)=\\\"getExchangeRates('RUB')\\\">RUB</button>\\r\\n          </div>\\r\\n          <app-line-chart [dataset]=\\\"dataset\\\" [labels]=\\\"labels\\\"></app-line-chart>\\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <table class=\\\"white text-center z-depth-1\\\" mdbTable>\\r\\n        <thead class=\\\"primary-color text-white\\\">\\r\\n          <tr>\\r\\n            <th>Value</th>\\r\\n            <th>Label</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr mdbTableCol *ngFor=\\\"let value of barChartDataset[0].data; let i = index\\\">\\r\\n            <th scope=\\\"row\\\">{{ value }}</th>\\r\\n            <td>{{ barChartLabels[i] }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-body>\\r\\n          <app-pie-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-pie-chart>\\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col-md-6 mb-3\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-body>\\r\\n          <app-bar-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-bar-chart>\\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-6 mb-3\\\">\\r\\n      <mdb-card>\\r\\n        <mdb-card-body>\\r\\n          <app-doughnut-chart [dataset]=\\\"barChartDataset\\\" [labels]=\\\"barChartLabels\\\"></app-doughnut-chart>\\r\\n        </mdb-card-body>\\r\\n      </mdb-card>\\r\\n    </div>\\r\\n  </div> -->\\r\\n\\r\\n</div>\\r\\n</div>\"","module.exports = \".container-fluid {\\n  background: #000000 url('northstar.jpg');\\n  background-size: cover; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhcnRzL2NvbnRhaW5lcnMvY2hhcnRzL0M6XFxEZXZcXHdndS1tZGIxL3NyY1xcYXBwXFxjaGFydHNcXGNvbnRhaW5lcnNcXGNoYXJ0c1xcY2hhcnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUNBQStEO0VBQy9ELHVCQUFzQixFQUN6QiIsImZpbGUiOiJzcmMvYXBwL2NoYXJ0cy9jb250YWluZXJzL2NoYXJ0cy9jaGFydHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyLWZsdWlkIHtcclxuICAgIGJhY2tncm91bmQ6ICMwMDAwMDAgdXJsKCcuLi8uLi8uLi8uLi9hc3NldHMvaW1nL25vcnRoc3Rhci5qcGcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../reducers/index';\r\n\r\nimport * as fromCharts from './../../store/charts.actions';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { getLineChartData, getBarChartData, getIsLoading } from '../../store/charts.selectors';\r\n\r\n@Component({\r\n  selector: 'app-charts',\r\n  templateUrl: './charts.component.html',\r\n  styleUrls: ['./charts.component.scss']\r\n})\r\nexport class ChartsComponent implements OnInit, OnDestroy {\r\n  isLoading$: Observable<boolean>;\r\n\r\n  lineChartSub: Subscription;\r\n  barChartSub: Subscription;\r\n\r\n  dataset: any[] = [{ data: [], label: ''}];\r\n  labels: any[] = [];\r\n\r\n  barChartDataset: any[] = [{ data: [], label: '' }];\r\n  barChartLabels: any[] = [];\r\n  barChartDate: string;\r\n  barChartBase: string;\r\n\r\n  currency: string;\r\n\r\n  constructor(private store: Store<AppState>) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.store.select(getIsLoading);\r\n\r\n    this.lineChartSub = this.store.select(getLineChartData).subscribe( (data: any) => {\r\n      if (data.values) {\r\n        this.dataset = [{ data: data.values, label: `${data.currencyName} exchange rates (base EUR)`}];\r\n        this.labels = data.labels;\r\n      } else {\r\n        this.getExchangeRates('USD');\r\n      }\r\n    });\r\n\r\n    this.barChartSub = this.store.select(getBarChartData).subscribe( (data: any) => {\r\n      if (data.values) {\r\n        this.barChartDataset = [{ data: data.values, label: `${data.date} exchange rates (base ${data.base})`}];\r\n        this.barChartLabels = data.labels;\r\n      } else {\r\n        this.getLatestExchangeRates();\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  getExchangeRates(currency: string) {\r\n    this.store.dispatch(new fromCharts.LineChartQuery({ currency }));\r\n  }\r\n\r\n  getLatestExchangeRates() {\r\n    this.store.dispatch(new fromCharts.BarChartQuery());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.lineChartSub) {\r\n      this.lineChartSub.unsubscribe();\r\n    }\r\n\r\n    if (this.barChartSub) {\r\n      this.barChartSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChartsService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n  startDate = '2018-01-01';\r\n  endDate = '2018-01-31';\r\n  apiHistoryUrl = 'https://api.exchangeratesapi.io/history';\r\n  apiLatestUrl = 'https://api.exchangeratesapi.io/latest';\r\n\r\n  getExchangeRates(currency: string) {\r\n    return this.http.get(`${this.apiHistoryUrl}?start_at=${this.startDate}&end_at=${this.endDate}&symbols=${currency}`).pipe(\r\n      map( (res: any) => res['rates']),\r\n      switchMap( (val) => {\r\n        const dataset = [];\r\n        for (const rate in val) {\r\n          if (val.hasOwnProperty(rate)) {\r\n            dataset.push({date: rate, value: val[rate][currency] });\r\n          }\r\n        }\r\n        const sorted = dataset.sort((a, b) => {\r\n          if (a.date < b.date) {\r\n            return -1;\r\n          }\r\n          if (a.date > b.date) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n        const currencyName = currency;\r\n        const labels = sorted.map( data => data.date);\r\n        const values = sorted.map( data => data.value);\r\n        return of({ currencyName, values, labels });\r\n      })\r\n    );\r\n  }\r\n\r\n  getLatestExchangeRates() {\r\n    return this.http.get(this.apiLatestUrl).pipe(\r\n      map( (data: any) => {\r\n        const date = data['date'];\r\n        const base = data['base'];\r\n        const rates = data['rates'];\r\n        const dataset = [];\r\n\r\n        for (const currency in rates) {\r\n          if (rates.hasOwnProperty(currency)) {\r\n            dataset.push({ currency: currency, value: rates[currency]});\r\n          }\r\n        }\r\n\r\n        const values = dataset.map( latestRates => latestRates.value).slice(0, 5);\r\n        const labels = dataset.map( latestRates => latestRates.currency).slice(0, 5);\r\n\r\n        return { date, base, values, labels };\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport enum ChartsActionTypes {\r\n  LINE_CHART_QUERY = '[Charts] Line chart query',\r\n  LINE_CHART_LOADED = '[Charts] Line chart loaded',\r\n\r\n  BAR_CHART_QUERY = '[Charts] Bar chart query',\r\n  BAR_CHART_LOADED = '[Charts] Bar chart loaded',\r\n\r\n  CHARTS_ERROR = '[Charts] Error'\r\n}\r\n\r\nexport class LineChartQuery implements Action {\r\n  readonly type = ChartsActionTypes.LINE_CHART_QUERY;\r\n\r\n  constructor(public payload: { currency: string }) {}\r\n}\r\n\r\nexport class BarChartQuery implements Action {\r\n  readonly type = ChartsActionTypes.BAR_CHART_QUERY;\r\n}\r\n\r\nexport class LineChartLoaded implements Action {\r\n  readonly type = ChartsActionTypes.LINE_CHART_LOADED;\r\n\r\n  constructor(public payload: { lineChartData: any }) {}\r\n}\r\n\r\nexport class BarChartLoaded implements Action {\r\n  readonly type = ChartsActionTypes.BAR_CHART_LOADED;\r\n\r\n  constructor(public payload: { barChartData: any }) {}\r\n}\r\n\r\nexport class ChartsError implements Action {\r\n  readonly type = ChartsActionTypes.CHARTS_ERROR;\r\n\r\n  constructor(public payload: { error: any }) {}\r\n}\r\n\r\nexport type ChartsActions =\r\n  | LineChartQuery\r\n  | LineChartLoaded\r\n  | BarChartQuery\r\n  | BarChartLoaded\r\n  | ChartsError;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { ChartsService } from '../services/charts.service';\r\n\r\nimport * as fromCharts from './../store/charts.actions';\r\nimport { ChartsActionTypes } from './../store/charts.actions';\r\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState } from '../../reducers/index';\r\nimport { getLineChartData, getBarChartData } from './charts.selectors';\r\n\r\n@Injectable()\r\nexport class ChartsEffects {\r\n\r\n  constructor(private actions$: Actions, private chartsService: ChartsService, private store: Store<AppState>) {}\r\n\r\n  @Effect()\r\n  lineChartQuery$ = this.actions$.pipe(\r\n    ofType<fromCharts.LineChartQuery>(ChartsActionTypes.LINE_CHART_QUERY),\r\n    map( (action: fromCharts.LineChartQuery) => action.payload),\r\n    withLatestFrom(this.store.pipe(select(getLineChartData))),\r\n    switchMap( ([payload, chartsData]) =>  {\r\n      if (!chartsData.values || (chartsData.currencyName && chartsData.currencyName !== payload.currency)) {\r\n          return this.chartsService.getExchangeRates(payload.currency)\r\n          .pipe(\r\n            map( (data: any) => new fromCharts.LineChartLoaded({ lineChartData: data })),\r\n            catchError( (error: any) => of(new fromCharts.ChartsError({ error }))\r\n          ));\r\n      }\r\n      return of(new fromCharts.LineChartLoaded({ lineChartData: chartsData }));\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  barChartQuery$ = this.actions$.pipe(\r\n    ofType<fromCharts.BarChartQuery>(ChartsActionTypes.BAR_CHART_QUERY),\r\n    withLatestFrom(this.store.pipe(select(getBarChartData))),\r\n    switchMap( ([, chartData]) => {\r\n      if (!chartData.values) {\r\n        return this.chartsService.getLatestExchangeRates()\r\n        .pipe(\r\n          map( (data: any) => new fromCharts.BarChartLoaded({ barChartData: data })),\r\n          catchError( (error: any) => of(new fromCharts.ChartsError( { error })))\r\n        );\r\n      }\r\n      return of(new fromCharts.BarChartLoaded({ barChartData: chartData }));\r\n    })\r\n  );\r\n}\r\n","import { chartsInitialState, ChartsState } from './charts.state';\r\nimport { ChartsActions, ChartsActionTypes } from './charts.actions';\r\n\r\n\r\nexport function chartsReducer(state = chartsInitialState, action: ChartsActions): ChartsState {\r\n  switch (action.type) {\r\n\r\n    case ChartsActionTypes.LINE_CHART_QUERY: {\r\n      return Object.assign({}, state, {\r\n        lineChartLoading: true,\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.BAR_CHART_QUERY: {\r\n      return Object.assign({}, state, {\r\n        barChartLoading: true\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.LINE_CHART_LOADED: {\r\n      return Object.assign({}, state, {\r\n        lineChartData: action.payload.lineChartData,\r\n        lineChartLoading: false,\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.BAR_CHART_LOADED: {\r\n      return Object.assign({}, state, {\r\n        barChartData: action.payload.barChartData,\r\n        barChartLoading: false,\r\n      });\r\n    }\r\n\r\n    case ChartsActionTypes.CHARTS_ERROR: {\r\n      return Object.assign({}, state, {\r\n        error: action.payload.error\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\r\nimport { ChartsState } from './charts.state';\r\n\r\nexport const getChartsState = createFeatureSelector<ChartsState>('charts');\r\n\r\n\r\nexport const getLineChartData = createSelector(\r\n  getChartsState,\r\n  charts => charts.lineChartData\r\n);\r\n\r\nexport const getBarChartData = createSelector(\r\n  getChartsState,\r\n  charts => charts.barChartData\r\n);\r\n\r\nexport const getIsLoading = createSelector(\r\n  getChartsState,\r\n  charts => charts.barChartLoading && charts.lineChartLoading\r\n);\r\n","export interface ChartsState {\r\n  lineChartData: any;\r\n  barChartData: any;\r\n  lineChartLoading: boolean;\r\n  barChartLoading: boolean;\r\n  error: any;\r\n}\r\n\r\nexport const chartsInitialState: ChartsState = {\r\n  lineChartData: {},\r\n  barChartData: {},\r\n  lineChartLoading: false,\r\n  barChartLoading: false,\r\n  error: null\r\n};\r\n"],"sourceRoot":""}