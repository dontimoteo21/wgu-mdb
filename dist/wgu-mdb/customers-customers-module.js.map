{"version":3,"sources":["webpack:///./src/app/customers/containers/customers.component.html","webpack:///./src/app/customers/containers/customers.component.scss","webpack:///./src/app/customers/containers/customers.component.ts","webpack:///./src/app/customers/customers-routing.module.ts","webpack:///./src/app/customers/customers.module.ts","webpack:///./src/app/customers/store/customers.actions.ts","webpack:///./src/app/customers/store/customers.effects.ts","webpack:///./src/app/customers/store/customers.reducer.ts","webpack:///./src/app/customers/store/customers.selectors.ts","webpack:///./src/app/customers/store/customers.state.ts"],"names":[],"mappings":"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","file":"customers-customers-module.js","sourcesContent":["module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n<div class=\\\"section-header\\\">\\r\\n  <h3 class=\\\"grey-text\\\">Course list</h3>\\r\\n  <p class=\\\"grey-text pt-3\\\">Manage your course list</p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid pb-5\\\">\\r\\n  <div class=\\\"pt-3 pb-5\\\">\\r\\n    <button mdbBtn color=\\\"primary\\\" (click)=\\\"onAddCustomer()\\\">Add new course</button>\\r\\n\\r\\n    <div *ngIf=\\\"customers\\\" class=\\\"mt-4 white\\\">\\r\\n      <app-customers-list [customers]=\\\"customers\\\" (customerEdited)=\\\"onCustomerEdit($event)\\\" (customerDeleted)=\\\"onCustomerDelete($event)\\\"></app-customers-list>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"isLoading$ | async\\\" class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"margin-top: 200px\\\">\\r\\n      <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\" style=\\\"width: 4rem; height: 4rem;\\\">\\r\\n        <span class=\\\"sr-only\\\">Loading...</span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\"","module.exports = \".container-fluid {\\n  background: #000000 url('northstar.jpg');\\n  background-size: cover; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXJzL2NvbnRhaW5lcnMvQzpcXERldlxcd2d1LW1kYjEvc3JjXFxhcHBcXGN1c3RvbWVyc1xcY29udGFpbmVyc1xcY3VzdG9tZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUNBQTREO0VBQzVELHVCQUFzQixFQUN6QiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jb250YWluZXJzL2N1c3RvbWVycy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXItZmx1aWQge1xyXG4gICAgYmFja2dyb3VuZDogIzAwMDAwMCB1cmwoJy4uLy4uLy4uL2Fzc2V0cy9pbWcvbm9ydGhzdGFyLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../reducers/index';\r\n\r\nimport * as fromCustomers from './../store/customers.actions';\r\nimport { Customer } from '../models/customer.model';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { getCustomers, getIsLoading } from '../store/customers.selectors';\r\nimport { take, map } from 'rxjs/operators';\r\nimport { ConfirmModalComponent } from '../../shared/components/confirm-modal/confirm-modal.component';\r\nimport { CustomersModalComponent } from '../../shared/components/customers-modal/customers-modal.component';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.scss']\r\n})\r\nexport class CustomersComponent implements OnInit, OnDestroy {\r\n  isLoading$: Observable<boolean>;\r\n  customers: Customer[] | null;\r\n  modalRef: MDBModalRef;\r\n\r\n  customersSub: Subscription;\r\n\r\n  modalConfig = {\r\n    class: 'modal-dialog-centered'\r\n  };\r\n\r\n  lastCustomerIndex: number;\r\n\r\n  constructor(private modalService: MDBModalService, private store: Store<AppState>, private afAuth: AngularFireAuth) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoading$ = this.store.select(getIsLoading);\r\n\r\n    this.customersSub = this.store.select(getCustomers).pipe(\r\n      map( (customers: Customer[]) => {\r\n        if (this.user && !customers) {\r\n          this.store.dispatch(new fromCustomers.CustomersQuery());\r\n        }\r\n        return customers;\r\n      })\r\n    )\r\n    .subscribe( (customers: Customer[]) => {\r\n      if (customers && customers.length !== 0) {\r\n        const index: number = Number(customers[customers.length - 1].id);\r\n        this.lastCustomerIndex = index;\r\n      } else {\r\n        this.lastCustomerIndex = 0;\r\n      }\r\n\r\n      this.customers = customers;\r\n    });\r\n  }\r\n\r\n  get user() {\r\n    return this.afAuth.auth.currentUser;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customersSub) {\r\n      this.customersSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onAddCustomer() {\r\n    this.modalRef = this.modalService.show(CustomersModalComponent, this.modalConfig);\r\n\r\n    this.modalRef.content.heading = 'Add new customer';\r\n    this.modalRef.content.customer.id = this.lastCustomerIndex + 1;\r\n\r\n    this.modalRef.content.customerData.pipe(take(1)).subscribe( (customerData: Customer) => {\r\n      this.store.dispatch(new fromCustomers.CustomersAdded({ customer: customerData }));\r\n    });\r\n  }\r\n\r\n  openEditCustomerModal(customer: Customer) {\r\n    this.modalRef = this.modalService.show(CustomersModalComponent, this.modalConfig);\r\n\r\n    this.modalRef.content.heading = 'Edit customer';\r\n    const customerCopy = {\r\n      key: customer.key,\r\n      id: customer.id || null,\r\n      name: customer.name || null,\r\n      description: customer.description || null\r\n     };\r\n    this.modalRef.content.customer = customerCopy;\r\n\r\n    this.modalRef.content.customerData.pipe(take(1)).subscribe( (customerData: Customer) => {\r\n      this.store.dispatch(new fromCustomers.CustomersEdited({ customer: customerData }));\r\n    });\r\n  }\r\n\r\n  openConfirmModal(customer: Customer) {\r\n    this.modalRef = this.modalService.show(ConfirmModalComponent, this.modalConfig);\r\n\r\n    this.modalRef.content.confirmation.pipe(take(1)).subscribe( (confirmation: boolean) => {\r\n      if (confirmation) {\r\n        this.store.dispatch(new fromCustomers.CustomersDeleted({ customer }));\r\n      }\r\n    });\r\n  }\r\n\r\n  onCustomerEdit(customer: Customer) {\r\n    this.openEditCustomerModal(customer);\r\n  }\r\n\r\n  onCustomerDelete(customer: Customer) {\r\n    this.openConfirmModal(customer);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomersComponent } from './containers/customers.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CustomersComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomersRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomersComponent } from './containers/customers.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ButtonsModule, InputsModule, TableModule, IconsModule, ModalModule } from 'angular-bootstrap-md';\r\n\r\nimport * as fromCustomers from './store/customers.reducer';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { CustomersEffects } from './store/customers.effects';\r\nimport { CustomersRoutingModule } from './customers-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    CustomersRoutingModule,\r\n    ModalModule,\r\n    FormsModule,\r\n    ButtonsModule,\r\n    InputsModule,\r\n    IconsModule,\r\n    TableModule,\r\n    StoreModule.forFeature('customers', fromCustomers.customersReducer),\r\n    EffectsModule.forFeature([CustomersEffects])\r\n  ],\r\n  declarations: [CustomersComponent],\r\n  exports: [CustomersComponent],\r\n})\r\nexport class CustomersModule { }\r\n","import { Action } from '@ngrx/store';\r\nimport { Customer } from '../models/customer.model';\r\n\r\nexport enum CustomersActionTypes {\r\n  CUSTOMERS_QUERY = '[Customers] Query',\r\n  CUSTOMERS_LOADED = '[Customers] Fetched',\r\n\r\n  CUSTOMERS_ADDED = '[Customers] Added',\r\n  CUSTOMERS_EDITED = '[Customers] Edited',\r\n  CUSTOMERS_DELETED = '[Customers] Deleted',\r\n\r\n  CUSTOMERS_ERROR = '[Customers] Error'\r\n}\r\n\r\nexport class CustomersQuery implements Action {\r\n  readonly type = CustomersActionTypes.CUSTOMERS_QUERY;\r\n}\r\n\r\nexport class CustomersLoaded implements Action {\r\n  readonly type = CustomersActionTypes.CUSTOMERS_LOADED;\r\n\r\n  constructor(public payload: { customers: Customer[] }) {}\r\n}\r\n\r\nexport class CustomersAdded implements Action {\r\n  readonly type = CustomersActionTypes.CUSTOMERS_ADDED;\r\n\r\n  constructor(public payload: { customer: Customer }) {}\r\n}\r\n\r\nexport class CustomersEdited implements Action {\r\n  readonly type = CustomersActionTypes.CUSTOMERS_EDITED;\r\n\r\n  constructor(public payload: { customer: Customer }) {}\r\n}\r\n\r\nexport class CustomersDeleted implements Action {\r\n  readonly type = CustomersActionTypes.CUSTOMERS_DELETED;\r\n\r\n  constructor(public payload: { customer: Customer }) {}\r\n}\r\n\r\nexport class CustomersError implements Action {\r\n  readonly type = CustomersActionTypes.CUSTOMERS_ERROR;\r\n\r\n  constructor(public payload: { error: any }) {}\r\n}\r\n\r\nexport type CustomersActions =\r\n  | CustomersQuery\r\n  | CustomersLoaded\r\n  | CustomersAdded\r\n  | CustomersEdited\r\n  | CustomersDeleted\r\n  | CustomersError;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { CustomersService } from '../services/customers.service';\r\nimport { CustomersActionTypes } from './customers.actions';\r\nimport { switchMap, map, catchError, withLatestFrom } from 'rxjs/operators';\r\nimport { Customer } from '../models/customer.model';\r\n\r\nimport * as fromCustomers from './../store/customers.actions';\r\nimport { of } from 'rxjs';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AppState } from '../../reducers/index';\r\nimport { getUser } from '../../auth/store/auth.selectors';\r\n\r\n@Injectable()\r\nexport class CustomersEffects {\r\n\r\n  constructor(private actions$: Actions, private customersService: CustomersService, private store: Store<AppState>) {}\r\n\r\n  @Effect()\r\n  query$ = this.actions$.pipe(\r\n    ofType(CustomersActionTypes.CUSTOMERS_QUERY),\r\n    withLatestFrom(this.store.pipe(select(getUser))),\r\n    switchMap(([, user]: any) => this.customersService.get(user.uid)\r\n      .pipe(\r\n        map((data: any) => {\r\n          const customersData: Customer[] = data.map((res: any) => {\r\n            const key = res.payload.key;\r\n            const customer: Customer = res.payload.val();\r\n            return {\r\n              key: key,\r\n              id: customer.id,\r\n              name: customer.name,\r\n              description: customer.description\r\n            };\r\n          });\r\n          return (new fromCustomers.CustomersLoaded({ customers: customersData }));\r\n        }),\r\n        catchError(error => {\r\n          return of(new fromCustomers.CustomersError({ error }));\r\n        })\r\n      )\r\n    ),\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  added$ = this.actions$.pipe(\r\n    ofType(CustomersActionTypes.CUSTOMERS_ADDED),\r\n    map((action: fromCustomers.CustomersAdded) => action.payload),\r\n    withLatestFrom(this.store.pipe(select(getUser))),\r\n    switchMap(([payload, user]: any) => this.customersService.add(payload.customer, user.uid))\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  edit$ = this.actions$.pipe(\r\n    ofType(CustomersActionTypes.CUSTOMERS_EDITED),\r\n    map((action: fromCustomers.CustomersEdited) => action.payload),\r\n    withLatestFrom(this.store.pipe(select(getUser))),\r\n    switchMap(([payload, user]: any) => this.customersService.update(payload.customer, user.uid)\r\n    .pipe(\r\n      catchError( error => {\r\n      return of(new fromCustomers.CustomersError({ error }));\r\n    }))\r\n    )\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  delete$ = this.actions$.pipe(\r\n    ofType(CustomersActionTypes.CUSTOMERS_DELETED),\r\n    map((action: fromCustomers.CustomersDeleted) => action.payload),\r\n    withLatestFrom(this.store.pipe(select(getUser))),\r\n    switchMap(([payload, user]: any) => this.customersService.delete(payload.customer, user.uid))\r\n  );\r\n}\r\n","import { customersInitialState, CustomersState } from './customers.state';\r\nimport { CustomersActions, CustomersActionTypes } from './customers.actions';\r\n\r\nexport function customersReducer(state = customersInitialState, action: CustomersActions): CustomersState {\r\n  switch (action.type) {\r\n\r\n    case CustomersActionTypes.CUSTOMERS_QUERY: {\r\n      return Object.assign({}, state, {\r\n        isLoading: true,\r\n      });\r\n    }\r\n\r\n    case CustomersActionTypes.CUSTOMERS_LOADED: {\r\n      return Object.assign({}, state, {\r\n        customers: action.payload.customers,\r\n        isLoading: false,\r\n      });\r\n    }\r\n\r\n    case CustomersActionTypes.CUSTOMERS_ERROR: {\r\n      return Object.assign({}, state, {\r\n        isLoading: false,\r\n        error: action.payload.error\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\r\nimport { CustomersState } from './customers.state';\r\n\r\nexport const getCustomersState = createFeatureSelector<CustomersState>('customers');\r\n\r\nexport const getCustomers = createSelector(\r\n  getCustomersState,\r\n  customers => customers.customers\r\n);\r\n\r\nexport const getIsLoading = createSelector(\r\n  getCustomersState,\r\n  customers => customers.isLoading\r\n);\r\n\r\nexport const getError = createSelector(\r\n  getCustomersState,\r\n  customers => customers.error\r\n);\r\n","import { Customer } from '../models/customer.model';\r\n\r\nexport interface CustomersState {\r\n    customers: Customer[] | null;\r\n    isLoading: boolean;\r\n    error: any;\r\n}\r\n\r\nexport const customersInitialState: CustomersState = {\r\n    customers: null,\r\n    isLoading: true,\r\n    error: null\r\n};\r\n"],"sourceRoot":""}